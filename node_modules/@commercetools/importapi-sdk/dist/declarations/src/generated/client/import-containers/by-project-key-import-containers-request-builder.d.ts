/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { ImportContainer, ImportContainerDraft, ImportContainerPagedResponse } from "../../models/importcontainers.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyImportContainersByImportContainerKeyRequestBuilder } from "./by-project-key-import-containers-by-import-container-key-request-builder.js";
/**
 **/
export declare class ByProjectKeyImportContainersRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withImportContainerKeyValue(childPathArgs: {
        importContainerKey: string;
    }): ByProjectKeyImportContainersByImportContainerKeyRequestBuilder;
    /**
     *	Creates a new import container.
     */
    post(methodArgs: {
        body: ImportContainerDraft;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ImportContainer>;
    /**
     *	Retrieves all import containers of a given project key.
     */
    get(methodArgs?: {
        queryArgs?: {
            limit?: number;
            offset?: number;
            sort?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ImportContainerPagedResponse>;
}
