/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { CustomObject, CustomObjectDraft, CustomObjectPagedQueryResponse } from "../../models/custom-object.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder } from "./by-project-key-custom-objects-by-container-by-key-request-builder.js";
import { ByProjectKeyCustomObjectsByContainerRequestBuilder } from "./by-project-key-custom-objects-by-container-request-builder.js";
/**
 **/
export declare class ByProjectKeyCustomObjectsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withContainerAndKey(childPathArgs: {
        container: string;
        key: string;
    }): ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder;
    withContainer(childPathArgs: {
        container: string;
    }): ByProjectKeyCustomObjectsByContainerRequestBuilder;
    /**
     *	For performance reasons, it is highly advisable to query for Custom Objects in a container by using the `container` field in the `where` predicate.
     *
     */
    /**
     * @deprecated
     **/
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<CustomObjectPagedQueryResponse>;
    /**
     *	Checks if a CustomObject exists for a given Query Predicate. Returns a `200 OK` status if any CustomObjects match the Query Predicate or a `404 Not Found` otherwise.
     */
    head(methodArgs?: {
        queryArgs?: {
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    /**
     *	If an object with the given container/key exists, the object will be replaced with the new value and the version is incremented.
     *	If the request contains a version and an object with the given container/key, then the version must match the version of the existing object. Concurrent updates to the same Custom Object returns a [ConcurrentModification](ctp:api:type:ConcurrentModificationError) error even if the version is not provided.
     *
     *	Fields with `null` values will **not be saved**.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: CustomObjectDraft;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<CustomObject>;
}
