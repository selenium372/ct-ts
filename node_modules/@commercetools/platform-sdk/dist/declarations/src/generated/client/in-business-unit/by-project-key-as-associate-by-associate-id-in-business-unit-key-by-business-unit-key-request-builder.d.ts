/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { executeRequest } from "../../shared/utils/common-types.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder } from "../approval-flows/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-approval-flows-request-builder.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder } from "../approval-rules/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-approval-rules-request-builder.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder } from "../carts/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-carts-request-builder.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder } from "../orders/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-orders-request-builder.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder } from "../quote-requests/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-quote-requests-request-builder.js";
import { ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder } from "../quotes/by-project-key-as-associate-by-associate-id-in-business-unit-key-by-business-unit-key-quotes-request-builder.js";
/**
 **/
export declare class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            associateId: string;
            businessUnitKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            associateId: string;
            businessUnitKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	An Approval Rule describes the conditions determining whether an Order that matches the predicate needs approval by an approver before it can be ordered by an requester within a Business Unit.
     */
    approvalRules(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder;
    /**
     *	Approval Flows connect Orders that require approval with the Approval Rules that initiate the approval requirement.
     *	They represent the approval process by including information about approvals, rejections, and all involved parties.
     *
     */
    approvalFlows(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder;
    /**
     *	A shopping cart holds product variants and can be ordered.
     */
    carts(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder;
    orders(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder;
    /**
     *	A quote holds the negotiated offer.
     */
    quotes(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder;
    quoteRequests(): ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder;
}
