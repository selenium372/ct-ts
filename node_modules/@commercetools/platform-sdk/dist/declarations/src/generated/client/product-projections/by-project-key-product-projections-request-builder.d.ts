/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { ProductProjectionPagedQueryResponse } from "../../models/product.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyProductProjectionsSearchRequestBuilder } from "../search/by-project-key-product-projections-search-request-builder.js";
import { ByProjectKeyProductProjectionsSuggestRequestBuilder } from "../suggest/by-project-key-product-projections-suggest-request-builder.js";
import { ByProjectKeyProductProjectionsByIDRequestBuilder } from "./by-project-key-product-projections-by-id-request-builder.js";
import { ByProjectKeyProductProjectionsKeyByKeyRequestBuilder } from "./by-project-key-product-projections-key-by-key-request-builder.js";
/**
 **/
export declare class ByProjectKeyProductProjectionsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	This endpoint provides high performance search queries over ProductProjections. The query result contains the
     *	ProductProjections for which at least one ProductVariant matches the search query. This means that variants can
     *	be included in the result also for which the search query does not match. To determine which ProductVariants match
     *	the search query, the returned ProductProjections include the additional field isMatchingVariant.
     *
     */
    search(): ByProjectKeyProductProjectionsSearchRequestBuilder;
    /**
     *	The source of data for suggestions is the searchKeyword field in a product
     */
    suggest(): ByProjectKeyProductProjectionsSuggestRequestBuilder;
    withKey(childPathArgs: {
        key: string;
    }): ByProjectKeyProductProjectionsKeyByKeyRequestBuilder;
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyProductProjectionsByIDRequestBuilder;
    /**
     *	Use the Product Projections query endpoint to get the current or staged representations of Products.
     *	When used with an API Client that has the `view_published_products:{projectKey}` scope,
     *	this endpoint only returns published (current) Product Projections.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            staged?: boolean;
            priceCurrency?: string;
            priceCountry?: string;
            priceCustomerGroup?: string;
            priceChannel?: string;
            localeProjection?: string | string[];
            storeProjection?: string;
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductProjectionPagedQueryResponse>;
    /**
     *	Checks if the current or staged representation of a Product exists for a given Query Predicate. Returns a `200 OK` status if any ProductProjections match the Query Predicate or a `404 Not Found` otherwise.
     */
    head(methodArgs?: {
        queryArgs?: {
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
}
