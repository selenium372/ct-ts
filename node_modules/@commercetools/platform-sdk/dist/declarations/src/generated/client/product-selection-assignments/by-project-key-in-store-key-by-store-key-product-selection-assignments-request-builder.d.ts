/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { ProductsInStorePagedQueryResponse } from "../../models/product-selection.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
/**
 **/
export declare class ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	Queries Product Selection assignments in a specific [Store](ctp:api:type:Store).
     *
     *	The response will include duplicate Products whenever more than one active Product Selection of the Store
     *	includes a Product. To make clear through which Product Selection a Product is available in the Store
     *	the response contains assignments including both the Product and the Product Selection.
     *	Only Products of Product Selections that are activated in the Store will be returned.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            expand?: string | string[];
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductsInStorePagedQueryResponse>;
}
