/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { Product, ProductUpdate } from "../../models/product.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyProductsByIDImagesRequestBuilder } from "../images/by-project-key-products-by-id-images-request-builder.js";
import { ByProjectKeyProductsByIDProductSelectionsRequestBuilder } from "../product-selections/by-project-key-products-by-id-product-selections-request-builder.js";
/**
 **/
export declare class ByProjectKeyProductsByIDRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    images(): ByProjectKeyProductsByIDImagesRequestBuilder;
    productSelections(): ByProjectKeyProductsByIDProductSelectionsRequestBuilder;
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     */
    get(methodArgs?: {
        queryArgs?: {
            priceCurrency?: string;
            priceCountry?: string;
            priceCustomerGroup?: string;
            priceChannel?: string;
            localeProjection?: string | string[];
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Product>;
    /**
     *	Checks if a Product exists for a given `id`. Returns a `200 OK` status if the Product exists or a `404 Not Found` otherwise.
     */
    head(methodArgs?: {
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     *
     *	A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
     */
    post(methodArgs: {
        queryArgs?: {
            priceCurrency?: string;
            priceCountry?: string;
            priceCustomerGroup?: string;
            priceChannel?: string;
            localeProjection?: string | string[];
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: ProductUpdate;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Product>;
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     *	Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
     */
    delete(methodArgs: {
        queryArgs: {
            priceCurrency?: string;
            priceCountry?: string;
            priceCustomerGroup?: string;
            priceChannel?: string;
            localeProjection?: string | string[];
            version: number;
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Product>;
}
