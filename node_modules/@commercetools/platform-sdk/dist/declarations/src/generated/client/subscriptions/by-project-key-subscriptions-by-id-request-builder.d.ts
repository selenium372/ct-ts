/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { Subscription, SubscriptionUpdate } from "../../models/subscription.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeySubscriptionsByIDHealthRequestBuilder } from "../health/by-project-key-subscriptions-by-id-health-request-builder.js";
/**
 **/
export declare class ByProjectKeySubscriptionsByIDRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withIdHealth(): ByProjectKeySubscriptionsByIDHealthRequestBuilder;
    get(methodArgs?: {
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Subscription>;
    /**
     *	Checks if a Subscription exists for a given `id`. Returns a `200 OK` status if the Subscription exists or a `404 Not Found` otherwise.
     */
    head(methodArgs?: {
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    post(methodArgs: {
        body: SubscriptionUpdate;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Subscription>;
    delete(methodArgs: {
        queryArgs: {
            version: number;
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Subscription>;
}
